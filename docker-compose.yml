version: '3.8'
services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-eduhacks}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  chromadb:
    image: chromadb/chroma:latest
    environment:
      CHROMA_DB_IMPL: duckdb+parquet
      CHROMA_SERVER_DB: duckdb
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/chroma
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - chromadb
    environment:
      DATABASE_URL: ${DATABASE_URL}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      REBUILD_CHROMA: ${REBUILD_CHROMA:-false}
      CHROMA_URL: ${CHROMA_URL:-http://chromadb:8000}
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app:delegated
    restart: unless-stopped

volumes:
  pgdata:
  chroma_data:
